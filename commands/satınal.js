const { EmbedBuilder } = require("discord.js");
const { QuickDB } = require("quick.db");
const db = new QuickDB();

module.exports = {
  name: "satÄ±nal",
  description: "Belirli bir Ã¼rÃ¼nÃ¼ satÄ±n alÄ±r ve rol verir",
  type: 1,

  options: [
    {
      name: "Ã¼rÃ¼n",
      description: "SatÄ±n alÄ±nacak Ã¼rÃ¼nÃ¼ seÃ§in",
      type: 3, // 3 -> String
      required: true,
      choices: [
        { name: "ğŸ“± Telefon", value: "telefon" },
        { name: "ğŸ”ª Ã‡akÄ±", value: "Ã§akÄ±" },
        { name: "ğŸ”« Luger P08 Pistol", value: "luger" },
        { name: "ğŸ”« Arcus 94", value: "arcus" },
        { name: "ğŸ”« Kel-tec PLR-16", value: "plr" },
        // DiÄŸer Ã¼rÃ¼nleri buraya ekleyin
      ],
    },
  ],

  run: async (client, interaction) => {
    const userId = interaction.user.id;
    const productName = interaction.options.getString("Ã¼rÃ¼n");

    // ÃœrÃ¼n fiyatlarÄ±nÄ± ve rolleri tanÄ±mlayalÄ±m
    const products = {
      "Ã§akÄ±": { price: 1000, role: "1134260641805385820", limit: 1 },
      "luger": { price: 5000, role: "1134260676274180186", limit: 1 },
      "arcus": { price: 12000, role: "1134260706624159794", limit: 1 },
      "plr": { price: 20000, role: "1134260733165707334", limit: 1 },
      "telefon": { price: 2000, role: "1134197058388111460", limit: 1 },
      // DiÄŸer Ã¼rÃ¼nleri buraya ekleyin
    };

    // SeÃ§ilen Ã¼rÃ¼nÃ¼ doÄŸrulayalÄ±m
    if (!products.hasOwnProperty(productName)) {
      const embed = new EmbedBuilder()
        .setColor("#ff0000")
        .setDescription("GeÃ§ersiz bir Ã¼rÃ¼n seÃ§tiniz.");

      return interaction.reply({ embeds: [embed] });
    }

    const product = products[productName];

    // KullanÄ±cÄ±nÄ±n bakiyesini alalÄ±m
    const balance = await db.get(`money_${userId}`);

    if (!balance || balance < product.price) {
      const embed = new EmbedBuilder()
        .setColor("#ff0000")
        .setDescription("Yeterli bakiyeniz yok veya Ã¼rÃ¼n fiyatÄ±na eÅŸit deÄŸil.");

      return interaction.reply({ embeds: [embed] });
    }

    // KullanÄ±cÄ±nÄ±n daha Ã¶nceden satÄ±n aldÄ±ÄŸÄ± bu Ã¼rÃ¼nden kaÃ§ adet olduÄŸunu kontrol edelim
    const userProductCount = await db.get(`products_${userId}.${productName}`) || 0;

    if (userProductCount >= product.limit) {
      const embed = new EmbedBuilder()
        .setColor("#ff0000")
        .setDescription("*Bu Ã¼rÃ¼nden zaten maksimum adette sahipsiniz.*");

      return interaction.reply({ embeds: [embed] });
    }

    // KullanÄ±cÄ±nÄ±n bakiyesini dÃ¼ÅŸÃ¼relim
    await db.sub(`money_${userId}`, product.price);

    // KullanÄ±cÄ±nÄ±n sahip olduÄŸu Ã¼rÃ¼n sayÄ±sÄ±nÄ± arttÄ±ralÄ±m
    await db.add(`products_${userId}.${productName}`, 1);

    // KullanÄ±cÄ±ya rol verelim
    const user = await interaction.guild.members.fetch(userId);
    const roleToAdd = interaction.guild.roles.cache.get(product.role);
    await user.roles.add(roleToAdd);

    // SatÄ±n alÄ±ndÄ± mesajÄ±nÄ± ayarlayalÄ±m
    const satÄ±nAlÄ±ndÄ±MesajÄ± = interaction.options.get("Ã¼rÃ¼n").value;

    const embed = new EmbedBuilder()
      .setColor("#00ff00")
      .setDescription(`ÃœrÃ¼n baÅŸarÄ±yla satÄ±n alÄ±ndÄ±!`);

    interaction.reply({ embeds: [embed] });
  },
};
